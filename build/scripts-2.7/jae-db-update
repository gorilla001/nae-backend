#!/usr/bin/python

import uuid
import requests
from jae.common import cfg
from jae.common import log as logging
from jae import db
from sqlalchemy.exc import IntegrityError

DB = db.API()

LOG = logging.getLogger(__name__)

SWAN_ENDPOINT = "https://swan.int.jumei.com/adminset/server/expand/projects/?keys=4c1342dc-c89e-11e4-b942-002219d55db7"

data = requests.get(SWAN_ENDPOINT)


def update_db():

    for item in data.json():
        """Add Project"""
        project_name = item["name"]
        project_desc = item["name"]
        project_id = uuid.uuid4().hex
        LOG.info("Add project %s..." % project_name)
        try:
            DB.add_project(dict(
                id=project_id,
                name=project_name,
                desc=project_desc))
            LOG.info("Done")
        except IntegrityError :
            LOG.info("Project %s has already added" % project_name)
    
        """Add User"""

        project = DB.get_project_by_name(project_name)
        project_user = [ user.name for user in project.users]

        project_repos = [ repo.repo_path for repo in project.repos]

        """Add User"""
        for user in item["dev"]:
            if user not in project_user:    
                name = user
                email = user + "@jumei.com"
                role_id = 1
                project = DB.get_project_by_name(project_name)

                LOG.info("Add user %s..." % name)
                try:
                    user_ref = DB.add_user(dict(id=uuid.uuid4().hex,
                                                     name=name,
                                                     email=email,
                                                     role_id=role_id,
                                                     swan=0),
                                                project=project)
                    LOG.info("Done")
                except IntegrityError, err:
                    LOG.error(err)

        for user in item["test"]:
            if user not in project_user:    
                name = user
                email = user + "@jumei.com"
                role_id = 2
                project = DB.get_project_by_name(project_name)

                LOG.info("Add user %s..." % name)
                try:
                    user_ref = DB.add_user(dict(id=uuid.uuid4().hex,
                                                     name=name,
                                                     email=email,
                                                     role_id=role_id,
                                                     swan=0),
                                                project=project)
                    LOG.info("Done")
                except IntegrityError, err:
                    LOG.error(err)

        for user in item["sa"]:
            if user not in project_user:    
                name = user
                email = user + "@jumei.com"
                role_id = 0
                project = DB.get_project_by_name(project_name)

                LOG.info("Add user %s..." % name)
                try:
                    user_ref = DB.add_user(dict(id=uuid.uuid4().hex,
                                                     name=name,
                                                     email=email,
                                                     role_id=role_id,
                                                     swan=0),
                                                project=project)
                    LOG.info("Done")
                except IntegrityError, err:
                    LOG.error(err)

        for user in item["pm"]:
            if user not in project_user:    
                name = user
                email = user + "@jumei.com"
                role_id = 3
                project = DB.get_project_by_name(project_name)

                LOG.info("Add user %s..." % name)
                try:
                    user_ref = DB.add_user(dict(id=uuid.uuid4().hex,
                                                     name=name,
                                                     email=email,
                                                     role_id=role_id,
                                                     swan=0),
                                                project=project)
                    LOG.info("Done")
                except IntegrityError, err:
                    LOG.error(err)

        """Add Repos"""
        for repos in item["codes"]:
            repo_path = repos["repo"]
            if repo_path not in project_repos:
                path = repos["path"]
                java = repos["java"]
                project = DB.get_project_by_name(project_name)

                if not project:
                    LOG.error("Add repos: no such project %s" % project_id)
                    sys.exit(2)
                LOG.info("Add repos %s..." % repo_path)
                try:
                    DB.add_repo(dict(
                        id=uuid.uuid4().hex,
                        repo_path=repo_path,
                        path=path,
                        java=java),
                        project=project)
                    LOG.info("Done")
                except IntegrityError as ex:
                    LOG.error(ex)

if __name__ == '__main__':
    cfg.parse_config()
    logging.setup()
    LOG.info("Update db begein...") 
    update_db()
    LOG.info("Update db end...")
